version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "3000:3000"
    env_file: .env
    environment:
      POSTGRES_URL: db:5432
      REDIS_URL: redis:6379
      MINIO_ENDPOINT: minio:9000
      DB_HOST: db
      REDIS_HOST: redis
      SERVER_HOST: 0.0.0.0
    networks:
      - app-network
    volumes:
      - app_logs:/app/runtime/logs

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1"
      POSTGRES_DB: "nevermore"
    networks:
      - app-network
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d indev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: miniouser
      MINIO_ROOT_PASSWORD: ohMyMinio
    command: server --console-address ":9001" /data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  minio_storage:
  app_logs: